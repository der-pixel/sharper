require("dotenv").config();const express=require("express"),fileUpload=require("express-fileupload"),fileSystem=require("fs"),app=express(),sharp=require("sharp"),btoa=require("btoa"),{StringDecoder:StringDecoder}=require("string_decoder"),decoder=new StringDecoder("utf-8");function arrayBufferToString(buffer){for(var bufView=new Uint16Array(buffer),length=bufView.length,result="",addition=Math.pow(2,16)-1,i=0;i<length;i+=addition)i+addition>length&&(addition=length-i),result+=String.fromCharCode.apply(null,bufView.subarray(i,i+addition));return result}app.use(fileUpload()),app.use(express.static(__dirname+"/"+process.env.STATIC_FOLDER)),app.get("/",(req,res)=>{res.sendFile(__dirname+"/app.html")}),app.post("/upload",(async function(req,res){let files=req.files;if(files&&0!==Object.keys(files).length){const object={download:[]};return void 0===files.fileLoad.name?sharp(element.data).withMetadata().webp().toBuffer().then(data=>{object.download.push("data:image/webp;base64,"+btoa(arrayBufferToString(data)))}):"string"==typeof files.fileLoad.name&&await sharp(files.fileLoad.data).withMetadata().webp().toBuffer().then(data=>{object.download.push("data:image/webp;base64,"+btoa(arrayBufferToString(data)))}),res.status(200).json(object)}return res.status(400).send("No files were uploaded.")}));var server=app.listen(process.env.APP_PORT,(function(){var port=server.address().port;console.log("App running at:","\n","- Local:   http://localhost:"+port+"/","\n","- Network: http://192.168.2.162:"+port+"/")}));